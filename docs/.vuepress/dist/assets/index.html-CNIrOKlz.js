import{_ as n,c as s,o as a,a as t}from"./app-u5Fl-cS_.js";const e={},p=t(`<h1 id="build-rest-api-s-for-crud-interactions" tabindex="-1"><a class="header-anchor" href="#build-rest-api-s-for-crud-interactions"><span>Build REST-API&#39;s for CRUD interactions</span></a></h1><p>First we need to decide what API End Points we will be using:</p><ul><li><strong>Create</strong> : POST <code>/&lt;path&gt;/</code> - the frontend will do a POST request to <code>/&lt;path&gt;/</code> with the data in the body (JSON).</li><li><strong>Read</strong> : GET <code>/&lt;path&gt;/:&lt;parameter&gt;</code> - the frontend will do a GET request to <code>/&lt;path&gt;/</code>, if needed with a <code>:&lt;parameter&gt;</code></li><li><strong>Update</strong> : PUT <code>/&lt;path&gt;/:&lt;parameter&gt;</code> - the frontend will do a PUT request to <code>/&lt;path&gt;/</code> with a <code>:&lt;parameter&gt;</code>, again with the data in the body (JSON)</li><li><strong>Delete</strong> : DELETE <code>/&lt;path&gt;/:&lt;parameter&gt;</code> - the frontend will do a DELETE request to <code>/&lt;path&gt;/</code> with a <code>:&lt;parameter&gt;</code></li></ul><p>Example:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Route for &#39;GET /products&#39;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/products&#39;</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>getAllProducts<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Route for &#39;GET /products/id&#39;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/products/:id&#39;</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>getOneProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Route for &#39;POST /products</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/products&#39;</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>createNewProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Route for &#39;PUT /products/id&#39;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;/products/:id&#39;</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>updateOneProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Route for &#39;DELETE /products/id&#39;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/products/:id&#39;</span><span class="token punctuation">,</span> db<span class="token punctuation">.</span>deleteOneProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(i,l){return a(),s("div",null,o)}const u=n(e,[["render",c],["__file","index.html.vue"]]),r=JSON.parse(`{"path":"/52_rest_api_crud/","title":"Build REST-API's for CRUD interactions","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1680247384000,"contributors":[{"name":"ronnymees","email":"ronny.mees@vives.be","commits":2},{"name":"Ronny Mees","email":"ronny.mees@vives.be","commits":1}]},"filePathRelative":"52_rest_api_crud/README.md"}`);export{u as comp,r as data};
